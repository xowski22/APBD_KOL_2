// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Anna",
                            HireDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Kowalska"
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Jan",
                            HireDate = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Nowak"
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Maria",
                            HireDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Wiśniewska"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Nursery", b =>
                {
                    b.Property<int>("NurseryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseryId"));

                    b.Property<DateTime>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NurseryId");

                    b.ToTable("Nurseries");

                    b.HasData(
                        new
                        {
                            NurseryId = 1,
                            EstablishedDate = new DateTime(2005, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Green Forest Nursery"
                        },
                        new
                        {
                            NurseryId = 2,
                            EstablishedDate = new DateTime(2010, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pine Valley Nursery"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Responsible", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BatchId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Responsibles");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            EmployeeId = 1,
                            Role = "Supervisor"
                        },
                        new
                        {
                            BatchId = 1,
                            EmployeeId = 2,
                            Role = "Planter"
                        },
                        new
                        {
                            BatchId = 2,
                            EmployeeId = 3,
                            Role = "Supervisor"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.SeedlingBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<int>("NurseryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SownDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.HasIndex("NurseryId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SeedlingBatches");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            NurseryId = 1,
                            Quantity = 500,
                            ReadyDate = new DateTime(2029, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SownDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 1
                        },
                        new
                        {
                            BatchId = 2,
                            NurseryId = 1,
                            Quantity = 300,
                            SownDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.TreeSpecies", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<int>("GrowthTimeInYears")
                        .HasColumnType("int");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpeciesId");

                    b.ToTable("TreeSpecies");

                    b.HasData(
                        new
                        {
                            SpeciesId = 1,
                            GrowthTimeInYears = 5,
                            LatinName = "Quercus robur"
                        },
                        new
                        {
                            SpeciesId = 2,
                            GrowthTimeInYears = 3,
                            LatinName = "Pinus sylvestris"
                        },
                        new
                        {
                            SpeciesId = 3,
                            GrowthTimeInYears = 4,
                            LatinName = "Fagus sylvatica"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Responsible", b =>
                {
                    b.HasOne("WebApplication1.Models.SeedlingBatch", "SeedlingBatch")
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Employee", "Employee")
                        .WithMany("Responsibilities")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SeedlingBatch");
                });

            modelBuilder.Entity("WebApplication1.Models.SeedlingBatch", b =>
                {
                    b.HasOne("WebApplication1.Models.Nursery", "Nursery")
                        .WithMany("SeedlingBatches")
                        .HasForeignKey("NurseryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.TreeSpecies", "TreeSpecies")
                        .WithMany("SeedlingBatches")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nursery");

                    b.Navigation("TreeSpecies");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Navigation("Responsibilities");
                });

            modelBuilder.Entity("WebApplication1.Models.Nursery", b =>
                {
                    b.Navigation("SeedlingBatches");
                });

            modelBuilder.Entity("WebApplication1.Models.SeedlingBatch", b =>
                {
                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("WebApplication1.Models.TreeSpecies", b =>
                {
                    b.Navigation("SeedlingBatches");
                });
#pragma warning restore 612, 618
        }
    }
}
